shiny::runApp()
shiny::runApp()
# Load data
allData = read.csv('./data/HI_ALL.csv', stringsAsFactors = F, sep = ";",check.names = F)
offersInTime = read.csv('./data/Offersintime.csv', stringsAsFactors = F, sep = ";",check.names = F)
# Prepare data
allData = prepareAllData(allData)
offersInTime = prepareOffersInTime(offersInTime)
View(allData)
View(offersInTime)
totalBids = read.csv('./data/Totalbids.csv', stringsAsFactors = F, sep = ";", check.names = F)
View(totalBids)
totalBids = read.csv('./data/Totalbids.csv', stringsAsFactors = F, sep = ";", check.names = F)
View(totalBids)
names(offersInTime)[names(offersInTime) == 'Klient'] <- 'Client'
View(offersInTime)
offersInTime = read.csv('./data/Offersintime.csv', stringsAsFactors = F, sep = ";",check.names = F)
View(offersInTime)
names(totalBids)[names(totalBids) == 'ID aukcie'] <- 'Auction_ID'
names(totalBids)[names(totalBids) == 'ID ucastnika'] <- 'Participant_ID'
subData = filter(totalBids, Auction_ID == 1364)
View(subData)
subData = order(subData$Hodnota, decreasing = T)
subData
subData = filter(totalBids, Auction_ID == 1364)
subData = order_by(subData, order_by = subData$Hodnota)
subData[order(Hodnota)]
subData[order(Hodnota),]
subData[order(Hodnota),]
subData[order(subData$Hodnota),]
subData[order(-subData$Hodnota),]
subData[order(subData$Hodnota, decreasing = F),]
subData[order(subData$Hodnota, decreasing = T),]
ggplot(subData)
View(offersInTime)
subData2 = filter(offersInTime, Auction_ID == 1364)
subData2 = filter(offersInTime, ID aukcie == 1364)
subData2 = filter(offersInTime, 'ID aukcie' == 1364)
View(subData2)
runApp()
shiny::runApp()
runApp()
auctions <- tabItem(tabName = "auction",
fluidRow(
box(
width = 3,
selectizeInput('type', 'Type',
choices = na.omit(unique(allData$Type))
)),
box(
width = 3,
selectizeInput('clarification', 'Type Clarification',
choices = c("") #observed na.omit(unique(allData$Type_Clarification))
)),
box(
width = 3,
selectizeInput('evaluation', 'Evaluation',
choices = c("") #observed #na.omit(unique(allData$EvaluatedBy))
)),
box(
width = 3,
selectizeInput('auction', 'Auction ID',
choices = c("") #observed #na.omit(unique(offersInTime$Auction_ID))
)),
box(
width = 3,
selectizeInput('item', 'Item ID',
choices = c("") #observed
))
),
fluidRow(
box(
width = 12,
plotOutput("auctions"),
DT::dataTableOutput('desc')
)
)
)
runApp()
subData = filter(subData, Client == 100)
subData = filter(offersInTime, Auction_ID == 1364)
subData = filter(offersInTime, Client == 100)
subData = filter(subData, Auction_ID == 1364)
subData$New_BID = as.integer(subData$New_BID)
x = subData$Change_order
x
y = subData$New_BID
y
ggplot(data = subData, aes(x = x, y = y, colour = "red")) + geom_line() + theme_bw() + geom_point() + xlab("Poradie zmeny") + ylab("Vyska ponuky") + theme(legend.position = "none")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
