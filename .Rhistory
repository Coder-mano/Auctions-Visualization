shiny::runApp()
shiny::runApp()
# Load data
allData = read.csv('./data/HI_ALL.csv', stringsAsFactors = F, sep = ";",check.names = F)
offersInTime = read.csv('./data/Offersintime.csv', stringsAsFactors = F, sep = ";",check.names = F)
# Prepare data
allData = prepareAllData(allData)
offersInTime = prepareOffersInTime(offersInTime)
View(allData)
View(offersInTime)
totalBids = read.csv('./data/Totalbids.csv', stringsAsFactors = F, sep = ";", check.names = F)
View(totalBids)
totalBids = read.csv('./data/Totalbids.csv', stringsAsFactors = F, sep = ";", check.names = F)
View(totalBids)
names(offersInTime)[names(offersInTime) == 'Klient'] <- 'Client'
View(offersInTime)
offersInTime = read.csv('./data/Offersintime.csv', stringsAsFactors = F, sep = ";",check.names = F)
View(offersInTime)
names(totalBids)[names(totalBids) == 'ID aukcie'] <- 'Auction_ID'
names(totalBids)[names(totalBids) == 'ID ucastnika'] <- 'Participant_ID'
subData = filter(totalBids, Auction_ID == 1364)
View(subData)
subData = order(subData$Hodnota, decreasing = T)
subData
subData = filter(totalBids, Auction_ID == 1364)
subData = order_by(subData, order_by = subData$Hodnota)
subData[order(Hodnota)]
subData[order(Hodnota),]
subData[order(Hodnota),]
subData[order(subData$Hodnota),]
subData[order(-subData$Hodnota),]
subData[order(subData$Hodnota, decreasing = F),]
subData[order(subData$Hodnota, decreasing = T),]
ggplot(subData)
View(offersInTime)
subData2 = filter(offersInTime, Auction_ID == 1364)
subData2 = filter(offersInTime, ID aukcie == 1364)
subData2 = filter(offersInTime, 'ID aukcie' == 1364)
View(subData2)
runApp()
shiny::runApp()
runApp()
auctions <- tabItem(tabName = "auction",
fluidRow(
box(
width = 3,
selectizeInput('type', 'Type',
choices = na.omit(unique(allData$Type))
)),
box(
width = 3,
selectizeInput('clarification', 'Type Clarification',
choices = c("") #observed na.omit(unique(allData$Type_Clarification))
)),
box(
width = 3,
selectizeInput('evaluation', 'Evaluation',
choices = c("") #observed #na.omit(unique(allData$EvaluatedBy))
)),
box(
width = 3,
selectizeInput('auction', 'Auction ID',
choices = c("") #observed #na.omit(unique(offersInTime$Auction_ID))
)),
box(
width = 3,
selectizeInput('item', 'Item ID',
choices = c("") #observed
))
),
fluidRow(
box(
width = 12,
plotOutput("auctions"),
DT::dataTableOutput('desc')
)
)
)
runApp()
subData = filter(subData, Client == 100)
subData = filter(offersInTime, Auction_ID == 1364)
subData = filter(offersInTime, Client == 100)
subData = filter(subData, Auction_ID == 1364)
subData$New_BID = as.integer(subData$New_BID)
x = subData$Change_order
x
y = subData$New_BID
y
ggplot(data = subData, aes(x = x, y = y, colour = "red")) + geom_line() + theme_bw() + geom_point() + xlab("Poradie zmeny") + ylab("Vyska ponuky") + theme(legend.position = "none")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
View(offersInTime)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(allData)
allData = read.csv('./data/HI_ALL.csv', stringsAsFactors = F, sep = ";",check.names = F)
View(allData)
pie(allData$`_auctionData_typ_string`)
pie(allData$_auctionData_typ_string)
pie(allData$'_auctionData_typ_string')
pie(allData$`_auctionData_typ_string`)
pie(table(allData$`_auctionData_typ_string`))
pie(table(allData$`_auctionData_typ_string`), col = rainbow(lbls))
pie(table(allData$`_auctionData_typ_string`))
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2))
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Pie chart of auction types")
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types", labels = c("Buy", "Sell"))
pie(table(allData$`_auctionData_typ_string`), labels = c("Buy", "Sell"), col = rainbow(2), main = "Auction types")
pct <- round(allData$`_auctionData_typ_string`/sum(allData$`_auctionData_typ_string`)*100)
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
View(offersInTime)
pie(allData$_`_bestTotalBid_number`)
pie(allData$`_bestTotalBid_number`)
pie(table(allData$`_bestTotalBid_number`))
barplot(table(allData$`_bestTotalBid_number`))
pie(table(allData$_`_auctionData_mena_string`), col = rainbow(2), main = "Used Currency")
pie(table(allData$`_auctionData_mena_string`), col = rainbow(2), main = "Used Currency")
str(allData$`_auctionData_mena_string`)
summary(allData$`_auctionData_mena_string`)
unique(allData$`_auctionData_mena_string`)
as.factor(allData$`_auctionData_mena_string`)
unique(allData$`_auctionData_mena_string`)
barplot(table(allData$`_auctionData_mena_string`), col = rainbow(2), main = "Used Currency")
pie(table(allData$`_auctionData_mena_string`), col = rainbow(2), main = "Used Currency")
unique(allData$`_auctionData_mena_string`)
idx = which(allData$`_auctionData_mena_string` %in% "%" )
allData$`_auctionData_mena_string` = allData$`_auctionData_mena_string`[-idx]
unique(allData$`_auctionData_mena_string`)
idx = which(allData$`_auctionData_mena_string` %in% "%" )
allData$`_auctionData_mena_string` = allData$`_auctionData_mena_string`[-idx]
currency = filter(allData, allData$`_auctionData_mena_string` == c("EUR", CZK))
currency = filter(allData, allData$`_auctionData_mena_string` == c("EUR", "CZK"))
currency
currency = filter(allData, allData$`_auctionData_mena_string` == c("EUR"))
currency
currency = filter(allData, _auctionData_mena_string == c("EUR"))
currency = filter(allData, `_auctionData_mena_string` == c("EUR"))
currency
currency = filter(allData, `_auctionData_mena_string` == "EUR")
currency
unique(currency)
unique(currency$`_auctionData_mena_string`)
pie(table(allData$`_auctionData_mena_string`[-"%"]), col = rainbow(2), main = "Used Currency")
currency = as.factor(allData$`_auctionData_mena_string`)
currency
str(currency)
droplevels(currency)
str(currency)
droplevels(currency, exclude = "%")
str(currency)
currency = droplevels(currency, exclude = "%")
str(currency)
summary(currency)
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP"))
str(currency)
summary(currency)
pie(table(allData$`_auctionData_mena_string`), col = rainbow(2), main = "Used Currency")
pie(table(currency), col = rainbow(2), main = "Used Currency")
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB"))
str(currency)
summary(currency)
pie(table(currency), col = rainbow(2), main = "Used Currency")
na.omit(currency)
currency = na.omit(currency)
pie(table(currency), col = rainbow(2), main = "Used Currency")
pie(table(currency), col = rainbow(length(currency)), main = "Used Currency")
str(currency)
summary(currency)
currency = na.omit(currency)
summary(currency)
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB", "<NA>"))
summary(currency)
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB", "<NA>"))
str(currency)
summary(currency)
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB", <NA>))
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB", "<NA>))
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB", "<NA>"))
currency = droplevels(currency, exclude = c("ks", "THB", "0", "GBP", "%", "AUD", "I", "RUB", "<NA>"))
summary(currency)
pie(table(currency), col = rainbow(7), main = "Used Currency")
pie(table(currency), col = rainbow(7), main = "Most used Currency")
pie(table(currency), col = rainbow(7), main = "Most Used Currency")
View(auctions)
View(items)
View(allData)
#Auction Types
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
#Public auctions
pie(table(allData$`_auctionData_verejna_string`), col = rainbow(2), main = "Most Used Currency")
#Public auctions
pie(table(allData$`_auctionData_verejna_string`), col = rainbow(2), main = "Most Used Currency", labels = c(0,1))
#Public auctions
pie(table(allData$`_auctionData_verejna_string`), col = rainbow(2), main = "Most Used Currency", labels = c(1,0))
#Public auctions
pie(table(allData$`_auctionData_verejna_string`), col = rainbow(2), main = "Most Used Currency", labels = c(0,1))
#Public auctions
pie(table(allData$`_auctionData_verejna_string`), col = rainbow(2), main = "Most Used Currency", labels = c("Private","Public"))
#Public auctions
pie(table(allData$`_auctionData_verejna_string`), col = rainbow(2), main = "Auction Accessibility", labels = c("Private","Public"))
#Max and Min total bids
max(allData$`_bestTotalBid_number`)
#Max and Min total bids
max(as.integer(allData$`_bestTotalBid_number`))
#Max and Min total bids
na.omit(allData$`_bestTotalBid_number`)
#Max and Min total bids
max = na.omit(allData$`_bestTotalBid_number`)
max(allData$`_bestTotalBid_number`)
str(max)
summary(max)
unique(max)
max[!max="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"]
max[!max=="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"]
max = max[!max=="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"]
max(max)
max = max[!max=="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"]
max(max)
unique(max)
count(max =="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­")
as.integer(max)
na.omit(max)
max = na.omit(max)
as.integer(max)
summary(max)
max = as.integer(max)
summary(max)
max = na.omit(max)
summary(max)
max(max)
max = max!="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"
max(max)
#Max and Min total bids
max = na.omit(allData$`_bestTotalBid_number`)
#Max and Min total bids
max = allData$`_bestTotalBid_number`
max
max = max!="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"
max(max)
max = as.integer(max)
max = na.omit(max)
max(max)
summary(max)
unique(max)
#Max and Min total bids
max = allData$`_bestTotalBid_number`
max = max[max!="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"]
max = as.integer(max)
max = na.omit(max)
unique(max)
summary(max)
#Max and Min total bids
max = allData$`_bestTotalBid_number`
max = max[max!="Stroje, zaÄ¹â„¢Ä‚­zenÄ‚­, nÄ‚Ë‡stroje, nÄ‚Ë‡Ä¹â„¢adÄ‚­"]
max(max)
summary(max)
unique(max)
max = as.integer(max)
max = na.omit(max)
order(max)
order(max, decreasing = F)
order(max, decreasing = T)
order(max)
data.frame(max)
max = data.frame(max)
View(max)
#Max and Min total bids
unique(allData$`ID aukcie`)
#Max and Min total bids
count(unique(allData$`ID aukcie`))
#Max and Min total bids
sum(unique(allData$`ID aukcie`))
#Max and Min total bids
length(unique(allData$`ID aukcie`))
View(auctions)
View(offersInTime)
#Max and Min total bids
length(unique(offersInTime$Auction_ID))
length(unique(offersInTime$Item_ID))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
View(allData)
runApp()
View(allData)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Auction Types
pie(table(allData$`_auctionData_typ_string`), col = rainbow(2), main = "Auction types")
#Auction Types
pie(table(allData$Type), col = rainbow(2), main = "Auction types")
allData$Type
str(allData$Type)
unique(allData$Type)
#Auction Types
types = as.factor(allData$Type)
str(types)
summary(types)
types = droplevels(types, exclude = c("","0"))
summary(types)
na.omit(types)
summary(types)
types = summary(types)
#Auction Types
types = as.factor(allData$Type)
summary(types)
types = droplevels(types, exclude = c("","0"))
summary(types)
types = summary(types)
#Auction Types
types = as.factor(allData$Type)
types = droplevels(types, exclude = c("","0"))
types = na.omit(types)
summary(types)
pie(table(allData$Type), col = rainbow(2), main = "Auction types")
pie(table(allData$Type), col = rainbow(2), main = "Auction types")
pie(types, col = rainbow(2), main = "Auction types")
pie(table(types), col = rainbow(2), main = "Auction types")
runApp()
runApp()
shiny::runApp()
